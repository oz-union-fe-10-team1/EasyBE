# Generated by Django 5.2.4 on 2025-08-07 03:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Store",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="매장명", max_length=100)),
                ("address", models.TextField(help_text="매장 주소")),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="위도",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="경도",
                        max_digits=11,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                ("contact", models.CharField(blank=True, help_text="연락처", max_length=20, null=True)),
                (
                    "opening_days",
                    models.CharField(blank=True, help_text="운영 요일 (예: 월-일)", max_length=255, null=True),
                ),
                (
                    "opening_hours",
                    models.JSONField(
                        blank=True,
                        help_text="요일별 운영시간 (예: {'monday': '09:00-18:00', 'tuesday': '09:00-18:00'})",
                        null=True,
                    ),
                ),
                (
                    "closed_days",
                    models.JSONField(
                        blank=True,
                        help_text="휴무일 정보 (예: ['2024-01-01', '2024-12-25'] 또는 {'regular': ['sunday'], 'special': ['2024-01-01']})",
                        null=True,
                    ),
                ),
                ("has_tasting", models.BooleanField(default=True, help_text="시음 가능 여부")),
                ("has_parking", models.BooleanField(default=False, help_text="주차 가능 여부")),
                ("image", models.URLField(blank=True, help_text="매장 대표 이미지", max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "정상 운영"),
                            ("TEMPORARY_CLOSED", "임시 휴업"),
                            ("PERMANENTLY_CLOSED", "폐점"),
                            ("MAINTENANCE", "정비 중"),
                        ],
                        default="ACTIVE",
                        help_text="매장 운영 상태",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "stores",
                "indexes": [
                    models.Index(fields=["name"], name="stores_name_b54c6a_idx"),
                    models.Index(fields=["status"], name="stores_status_ecb921_idx"),
                    models.Index(fields=["latitude", "longitude"], name="stores_latitud_c3b239_idx"),
                    models.Index(fields=["has_tasting"], name="stores_has_tas_df887d_idx"),
                    models.Index(fields=["has_parking"], name="stores_has_par_5e589f_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProductStock",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("quantity", models.PositiveIntegerField(default=0, help_text="재고 수량")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="stocks", to="products.product"
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="stocks", to="stores.store"
                    ),
                ),
            ],
            options={
                "db_table": "product_stocks",
                "indexes": [
                    models.Index(fields=["store"], name="product_sto_store_i_f92b6c_idx"),
                    models.Index(fields=["product"], name="product_sto_product_cdab23_idx"),
                    models.Index(fields=["quantity"], name="product_sto_quantit_aac792_idx"),
                ],
                "unique_together": {("product", "store")},
            },
        ),
    ]
