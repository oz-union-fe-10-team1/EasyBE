# Generated by Django 5.2.4 on 2025-07-21 09:28

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AlcoholType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("rice_wine", "막걸리/탁주"),
                            ("clear_wine", "청주"),
                            ("distilled", "소주/증류주"),
                            ("fruit_wine", "과실주"),
                            ("herb_wine", "약주/한방주"),
                            ("other", "기타"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "주종",
                "verbose_name_plural": "주종",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Brewery",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100)),
                ("address", models.TextField(blank=True)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                ("founded_year", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("logo_image", models.URLField(blank=True)),
                ("cover_image", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "양조장",
                "verbose_name_plural": "양조장",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductRecommendation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("score", models.FloatField(help_text="추천 점수 (0.0 ~ 1.0)")),
                ("reason", models.TextField(help_text="추천 이유")),
                ("algorithm_version", models.CharField(default="v1.0", max_length=20)),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("taste_based", "취향 기반"),
                            ("similar_user", "유사 사용자"),
                            ("trending", "인기 상품"),
                            ("new_product", "신제품"),
                            ("seasonal", "계절 추천"),
                            ("onboarding", "온보딩 추천"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("is_clicked", models.BooleanField(default=False)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "제품 추천",
                "verbose_name_plural": "제품 추천",
            },
        ),
        migrations.CreateModel(
            name="ProductTasteTag",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "intensity",
                    models.FloatField(
                        default=1.0,
                        help_text="태그 강도 (0.1: 약함, 1.0: 보통, 3.0: 강함)",
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(3.0),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "제품 맛 태그",
                "verbose_name_plural": "제품 맛 태그",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "지역",
                "verbose_name_plural": "지역",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TasteTag",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=30)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("sweetness", "단맛"),
                            ("sourness", "신맛"),
                            ("bitterness", "쓴맛"),
                            ("umami", "감칠맛"),
                            ("astringency", "떫은맛"),
                            ("freshness", "청량감"),
                            ("richness", "진한맛"),
                            ("lightness", "가벼운맛"),
                            ("fruitiness", "과일향"),
                            ("floral", "꽃향"),
                            ("herbal", "허브향"),
                            ("nutty", "견과류향"),
                            ("spicy", "향신료맛"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "color_code",
                    models.CharField(
                        default="#000000",
                        help_text="시각화용 색상 (#000000 형식)",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="올바른 HEX 색상 코드를 입력하세요.", regex="^#(?:[0-9a-fA-F]{3}){1,2}$"
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "맛 태그",
                "verbose_name_plural": "맛 태그",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=50)),
                ("description", models.TextField(blank=True)),
                ("image", models.URLField(blank=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "제품 카테고리",
                "verbose_name_plural": "제품 카테고리",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("ingredients", models.TextField(help_text="주요 원료 (쌀, 누룩, 물 등)")),
                (
                    "alcohol_content",
                    models.FloatField(
                        help_text="알코올 도수 (%)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("volume_ml", models.IntegerField(help_text="용량 (ml)")),
                ("price", models.DecimalField(decimal_places=0, help_text="판매가격 (원)", max_digits=10)),
                (
                    "original_price",
                    models.DecimalField(
                        blank=True, decimal_places=0, help_text="정가 (할인가 표시용)", max_digits=10, null=True
                    ),
                ),
                ("stock_quantity", models.IntegerField(default=0, help_text="재고 수량")),
                ("min_stock_alert", models.IntegerField(default=10, help_text="최소 재고 알림 기준")),
                (
                    "sweetness_level",
                    models.FloatField(
                        default=0.0,
                        help_text="단맛 지수 (0.0 ~ 5.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "sourness_level",
                    models.FloatField(
                        default=0.0,
                        help_text="신맛 지수 (0.0 ~ 5.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "bitterness_level",
                    models.FloatField(
                        default=0.0,
                        help_text="쓴맛 지수 (0.0 ~ 5.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "umami_level",
                    models.FloatField(
                        default=0.0,
                        help_text="감칠맛 지수 (0.0 ~ 5.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "alcohol_strength",
                    models.FloatField(
                        default=0.0,
                        help_text="알코올 강도 (0.0 ~ 5.0)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                (
                    "body_level",
                    models.FloatField(
                        default=0.0,
                        help_text="바디감 (0.0: 가벼움, 5.0: 진함)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("is_gift_suitable", models.BooleanField(default=False, help_text="선물용 적합")),
                ("is_award_winning", models.BooleanField(default=False, help_text="주류 대상 수상작")),
                ("is_regional_specialty", models.BooleanField(default=False, help_text="지역 특산주")),
                ("flavor_notes", models.CharField(blank=True, help_text="향미 특징 (예: 복숭아향)", max_length=100)),
                ("short_description", models.CharField(blank=True, help_text="간단 설명", max_length=200)),
                ("package_name", models.CharField(blank=True, help_text="패키지명", max_length=100)),
                ("is_limited_edition", models.BooleanField(default=False, help_text="한정판 여부")),
                ("is_premium", models.BooleanField(default=False, help_text="프리미엄 제품 여부")),
                ("is_organic", models.BooleanField(default=False, help_text="유기농 여부")),
                (
                    "similarity_vector",
                    models.JSONField(blank=True, default=dict, help_text="유사도 계산용 벡터 (캐시용)"),
                ),
                ("recommendation_score", models.FloatField(default=0.0, help_text="기본 추천 점수")),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("order_count", models.PositiveIntegerField(default=0)),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("average_rating", models.FloatField(default=0.0)),
                ("review_count", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "판매중"),
                            ("out_of_stock", "품절"),
                            ("discontinued", "단종"),
                            ("coming_soon", "출시예정"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False, help_text="추천 제품 여부")),
                ("launch_date", models.DateField(blank=True, help_text="출시일", null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("meta_title", models.CharField(blank=True, max_length=100)),
                ("meta_description", models.TextField(blank=True, max_length=300)),
                (
                    "alcohol_type",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to="products.alcoholtype"
                    ),
                ),
                (
                    "brewery",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="products", to="products.brewery"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="상세 제품 카테고리 (알코올 타입보다 세분화)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "전통주 제품",
                "verbose_name_plural": "전통주 제품",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("image_url", models.URLField()),
                ("alt_text", models.CharField(blank=True, max_length=200)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_main", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="images", to="products.product"
                    ),
                ),
            ],
            options={
                "verbose_name": "제품 이미지",
                "verbose_name_plural": "제품 이미지",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="ProductLike",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("product", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="products.product")),
            ],
            options={
                "verbose_name": "제품 좋아요",
                "verbose_name_plural": "제품 좋아요",
            },
        ),
    ]
