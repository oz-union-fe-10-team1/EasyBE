# Generated by Django 5.2.4 on 2025-07-22 08:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("nickname", models.CharField(default="temp_user", max_length=20, unique=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "provider",
                    models.CharField(
                        choices=[("KAKAO", "카카오"), ("NAVER", "네이버"), ("GOOGLE", "구글")],
                        default="KAKAO",
                        max_length=10,
                    ),
                ),
                ("provider_id", models.CharField(default="temp_id", max_length=255)),
                (
                    "role",
                    models.CharField(choices=[("USER", "사용자"), ("ADMIN", "관리자")], default="USER", max_length=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
                "indexes": [
                    models.Index(fields=["email"], name="users_email_4b85f2_idx"),
                    models.Index(fields=["provider", "provider_id"], name="users_provide_8d52ec_idx"),
                    models.Index(fields=["role"], name="users_role_0ace22_idx"),
                    models.Index(fields=["created_at"], name="users_created_6541e9_idx"),
                    models.Index(fields=["-created_at"], name="users_created_30b417_idx"),
                ],
                "unique_together": {("provider", "provider_id")},
            },
        ),
    ]
