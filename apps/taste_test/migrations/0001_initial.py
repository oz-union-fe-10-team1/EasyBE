# Generated by Django 5.2.4 on 2025-07-31 11:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TasteQuestion",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("question_text", models.TextField(help_text="질문 내용")),
                ("sequence", models.PositiveIntegerField(help_text="질문 순서")),
            ],
            options={
                "verbose_name": "맛 테스트 질문",
                "verbose_name_plural": "맛 테스트 질문",
                "ordering": ["sequence"],
            },
        ),
        migrations.CreateModel(
            name="TasteTest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(help_text="테스트 제목", max_length=255)),
                ("description", models.TextField(blank=True, help_text="테스트 설명")),
                ("is_active", models.BooleanField(default=True, help_text="활성화 여부")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "맛 테스트",
                "verbose_name_plural": "맛 테스트",
            },
        ),
        migrations.CreateModel(
            name="TasteType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type_name",
                    models.CharField(
                        help_text="맛 타입명 (달콤과일, 상큼톡톡, 목적여운, 깔끔고소, 미식가)", max_length=100
                    ),
                ),
                ("type_description", models.TextField(help_text="타입 설명")),
                ("type_image_url", models.URLField(blank=True, help_text="타입 이미지 URL")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "맛 타입",
                "verbose_name_plural": "맛 타입",
            },
        ),
        migrations.CreateModel(
            name="TasteAnswer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("answer_text", models.TextField(help_text="답변 내용")),
                (
                    "score_vector",
                    models.JSONField(default=dict, help_text="맛 계수에 미치는 영향 (JSON 형태) - 예: {'달콤과일': 1}"),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="taste_test.tastequestion",
                    ),
                ),
            ],
            options={
                "verbose_name": "맛 테스트 답변",
                "verbose_name_plural": "맛 테스트 답변",
            },
        ),
        migrations.AddField(
            model_name="tastequestion",
            name="test",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="questions", to="taste_test.tastetest"
            ),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("taste_test_completed_at", models.DateTimeField(blank=True, help_text="테스트 완료 시간", null=True)),
                (
                    "test_results",
                    models.JSONField(blank=True, default=dict, help_text="테스트 상세 결과 (점수, 유형 수 등)"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "initial_taste_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="최초 입맛 테스트 결과",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="taste_test.tastetype",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="taste_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자 프로필",
                "verbose_name_plural": "사용자 프로필",
            },
        ),
        migrations.CreateModel(
            name="TasteTypeRecommendation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("product_id", models.CharField(help_text="추천 상품 ID (UUID)", max_length=36)),
                ("recommendation_order", models.PositiveIntegerField(default=1, help_text="추천 순서")),
                ("recommendation_reason", models.TextField(blank=True, help_text="추천 이유")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "taste_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to="taste_test.tastetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "맛 타입 추천",
                "verbose_name_plural": "맛 타입 추천",
                "ordering": ["taste_type", "recommendation_order"],
                "unique_together": {("taste_type", "product_id")},
            },
        ),
    ]
